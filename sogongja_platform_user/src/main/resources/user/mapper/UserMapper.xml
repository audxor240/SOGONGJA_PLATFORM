<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.stoneitgt.sogongja.user.mapper.UserMapper">

	<select id="findByUserId" parameterType="string" resultType="com.stoneitgt.sogongja.domain.User">
		/* file : UserMapper.xml, id : findByUserId */
		SELECT *
		  FROM ST_USER
		 WHERE ID            = #{id}
		   AND WITHDRAW_FLAG = 0
		   AND DEL_FLAG      = 0
	</select>

	<update id="updateLastLoginDate" parameterType="int">
		/* file : UserMapper.xml, id : updateLastLoginDate */
		UPDATE ST_USER
		   SET LAST_LOGIN_DATE = CURRENT_TIMESTAMP
		     , LOCK_CNT        = 0
		 WHERE REG_USER_SEQ        = #{userSeq}
	</update>

	<select id="getUserList" parameterType="map" resultType="com.stoneitgt.common.LowerKeyMap">
		/* file : UserMapper.xml, id : getUserList */
		  SELECT U.*
		       , DATE_FORMAT(U.REG_DATE, '%Y-%m-%d')           AS REG_DT
		       , DATE_FORMAT(U.LAST_LOGIN_DATE, '%Y-%m-%d %T') AS LOGIN_DATE
		       , (SELECT CODE_NAME FROM ST_CODE_DTL D WHERE D.GRP_CODE = 'AUTH' AND D.CODE = U.AUTH) AS AUTH_NM
		       , (SELECT CODE_NAME FROM ST_CODE_DTL D WHERE D.GRP_CODE = 'COMPANY' AND D.CODE = U.COMPANY) AS COMPANY_NM
		       , (SELECT CODE_NAME FROM ST_CODE_DTL D WHERE D.GRP_CODE = 'POSITION' AND D.CODE = U.POSITION) AS POSITION_NM
		    FROM ST_USER U
		   WHERE U.DEL_FLAG = 0
		  <if test="field != null and field != '' and keyword != null and keyword != ''">
		     AND U.${field} LIKE CONCAT('%', #{keyword}, '%')
		  </if>
		ORDER BY USER_SEQ DESC
	/*||ORDER BY USER_SEQ DESC||*/
	</select>

	<select id="getUserInfo" parameterType="int" resultType="com.stoneitgt.sogongja.domain.User">
		/* file : UserMapper.xml, id : getUserList */
		  SELECT U.*
		    FROM ST_USER U
		   WHERE U.DEL_FLAG = 0
		     AND U.USER_SEQ = #{userSeq}
	</select>

	<select id="getUserInfo2" parameterType="string" resultType="com.stoneitgt.sogongja.domain.User">
		/* file : UserMapper.xml, id : getUserList */
		SELECT U.*
		FROM ST_USER U
		WHERE U.DEL_FLAG = 0
		  AND U.EMAIL = #{email}
	</select>

	<select id="getFindPwUserInfo" parameterType="string" resultType="com.stoneitgt.sogongja.domain.User">
		/* file : UserMapper.xml, id : getUserList */
		SELECT U.*
		FROM ST_USER U
		WHERE  U.EMAIL = #{email}
	</select>

	<select id="getUserPassword" parameterType="int" resultType="string">
		/* file : UserMapper.xml, id : getUserList */
		  SELECT U.PASSWORD
		    FROM ST_USER U
		   WHERE U.DEL_FLAG = 0
		     AND U.USER_SEQ = #{userSeq}
	</select>

	<select id="existedUserId" parameterType="string" resultType="int">
		/* file : UserMapper.xml, id : existedUserId */
		  SELECT COUNT(*) AS CNT
		    FROM ST_USER U
		   WHERE U.DEL_FLAG = 0
		     AND U.ID       = LOWER(#{id})
	</select>

	<select id="existedUserNickName" parameterType="string" resultType="int">
		/* file : UserMapper.xml, id : existedUserId */
		SELECT COUNT(*) AS CNT
		FROM ST_USER U
		WHERE U.DEL_FLAG = 0
		  AND U.NICK_NAME       = LOWER(#{nickName})
	</select>

	<select id="existedUserEmail" parameterType="string" resultType="int">
		/* file : UserMapper.xml, id : existedUserEmail */
		SELECT COUNT(*) AS CNT
		FROM ST_USER U
		WHERE U.DEL_FLAG = 0
		  AND U.EMAIL       = LOWER(#{email})
	</select>

	<insert id="saveUser" parameterType="com.stoneitgt.sogongja.domain.User">
		/* file : UserMapper.xml, id : saveUser */
		INSERT
		  INTO ST_USER (
		              USER_SEQ
		            , ID
		            , PASSWORD
		            , USERNAME
		            , NICK_NAME
		            , EMAIL
		            , TEL
		            , HP
		            , COMPANY
		            , COMPANY_NAME
		            , DEPT
		            , POSITION
		            , USER_TYPE
		            , BIRTH_DAY
		            , GENDER
		            , DESCRIPTION
		            , CATEGORY
		            , AUTH
		            , REG_USER_SEQ
		            , GOOGLE_ID
		            , KAKAO_ID
		            , NAVER_ID
		            , TYPE
		            , SUB_TYPE
		            , AGE_GROUP
		            , SERVICE_TYPE)
		       VALUES (
		              #{userSeq}
		            , LOWER(#{id})
		            , #{password}
		            , #{username}
		            , #{nickName}
		            , #{email}
		            , #{tel}
		            , #{hp}
		            , #{company}
		            , #{companyName}
		            , #{dept}
		            , #{position}
		            , #{userType}
		            , #{birthDay}
		            , #{gender}
		            , #{description}
		            , #{category}
		            , #{auth}
		            , #{loginUserSeq}
		            , #{googleId}
					, #{kakaoId}
					, #{naverId}
					, #{type}
					, #{subType}
					, #{age}
					, #{serviceType}
		            )
		    ON DUPLICATE KEY UPDATE USER_SEQ = #{userSeq}
		<if test="password != null and password != ''">
			 , PASSWORD                         = #{password}
		</if>
		     , EMAIL                         = #{email}
		     , TEL                           = #{tel}
		     , HP                            = #{hp}
		     , COMPANY                       = #{company}
		     , COMPANY_NAME                  = #{companyName}
		     , DEPT                          = #{dept}
		     , POSITION                      = #{position}
		     , BIRTH_DAY                     = #{birthDay}
		     , GENDER                        = #{gender}
		     , DESCRIPTION                   = #{description}
		     , CATEGORY                      = #{category}
		     , DEL_FLAG                      = 0
		     , MOD_USER_SEQ                  = #{loginUserSeq}
		     , MOD_DATE                      = CURRENT_TIMESTAMP()
			 , AGE_GROUP					 = #{age}
			 , SERVICE_TYPE					 = #{serviceType}
	</insert>

	<update id="updateUser" parameterType="int" >
		/* file : UserMapper.xml, id : updateUser */
		UPDATE ST_USER
		SET DEL_FLAG         = 1
		  , MOD_USER_SEQ     = #{userSeq}
		  , MOD_DATE         = CURRENT_TIMESTAMP()
		WHERE USER_SEQ         = #{userSeq}
	</update>

	<update id="deleteUser" parameterType="int" >
		/* file : UserMapper.xml, id : deleteUser */
		  UPDATE ST_USER
		     SET DEL_FLAG         = 1
		       , DEL_USER_SEQ     = #{userSeq}
		       , DEL_DATE         = CURRENT_TIMESTAMP()
		   WHERE USER_SEQ         = #{userSeq}
	</update>


	<update id="withdrawUser" parameterType="int" >
		/* file : UserMapper.xml, id : withdrawUser */
		  UPDATE ST_USER
		     SET WITHDRAW_FLAG         = 1
		       , WITHDRAW_DATE         = CURRENT_TIMESTAMP()
		       , MOD_USER_SEQ                  = #{userSeq}
		       , MOD_DATE                      = CURRENT_TIMESTAMP()
		   WHERE REG_USER_SEQ         = #{userSeq}
	</update>

	<update id="updatePassword" parameterType="com.stoneitgt.sogongja.domain.User" >
		/* file : UserMapper.xml, id : updatePassword */
		  UPDATE ST_USER
		     SET PASSWORD         = #{newPassword}
		       , LOCK_CNT         = 0
		       , LOCK_FLAG        = 0
		       , LOCK_DATE        = NULL
		       , PW_MOD_DATE      = CURRENT_TIMESTAMP()
		       , MOD_USER_SEQ     = #{loginUserSeq}
		       , MOD_DATE         = CURRENT_TIMESTAMP()
		   WHERE REG_USER_SEQ         = #{userSeq}
	</update>

	<select id="findUserId" parameterType="com.stoneitgt.sogongja.domain.User" resultType="string">
		/* file : UserMapper.xml, id : findUserId */
		  SELECT U.ID
		    FROM ST_USER U
		   WHERE U.DEL_FLAG   = 0
		     AND U.USERNAME   = #{username}
		     AND U.HP         = #{hp}
		     AND U.LICENSE_NO = #{licenseNo}
		     AND U.AUTH       = #{auth}
	</select>

	<select id="findUserPassword" parameterType="com.stoneitgt.sogongja.domain.User" resultType="int">
		/* file : UserMapper.xml, id : findUserPassword */
		  SELECT U.USER_SEQ
		    FROM ST_USER U
		   WHERE U.DEL_FLAG   = 0
		     AND U.ID         = #{id}
		     AND U.USERNAME   = #{username}
		     AND U.HP         = #{hp}
		     AND U.LICENSE_NO = #{licenseNo}
		     AND U.AUTH       = #{auth}
	</select>

	<update id="updateUserTypeAndSubType" parameterType="com.stoneitgt.sogongja.domain.User">
		/* file : UserMapper.xml, id : updateUserTypeAndSubType */
		UPDATE ST_USER
		SET
			TYPE = #{type}
		  , SUB_TYPE = #{subType}
		  , MOD_DATE = CURRENT_TIMESTAMP
		  , MOD_USER_SEQ        = #{userSeq}
		WHERE USER_SEQ        = #{userSeq} and DEL_FLAG = 0
	</update>

	<select id="getQnaList" parameterType="map" resultType="com.stoneitgt.common.LowerKeyMap">
		/* file : UserMapper.xml, id : getQnaList */
		SELECT A.*
		, DATE_FORMAT(A.REG_DATE, '%Y-%m-%d') AS REG_DT
		, U.USERNAME                          AS REG_USERNAME
		, (SELECT COUNT(1)
		FROM ST_FILES F
		WHERE F.DEL_FLAG = 0
		AND F.REF_TYPE = 'QNA'
		AND F.REF_SEQ  = A.BOARD_SEQ
		) AS FILE_CNT
		, SA.ANSWER_SEQ
		FROM ST_BOARD A
		INNER JOIN ST_USER U
		ON A.REG_USER_SEQ = U.USER_SEQ
		LEFT JOIN ST_BOARD_SETTING as BS ON BS.BOARD_SETTING_SEQ = A.BOARD_SETTING_SEQ
		LEFT JOIN ST_ANSWER as SA ON SA.BOARD_SEQ = A.BOARD_SEQ
		WHERE A.DEL_FLAG              = 0
		AND A.BOARD_SETTING_SEQ            = #{boardSettingSeq}
		<if test="keyword != null and keyword != ''">
			AND A.SUBJECT LIKE CONCAT('%', #{keyword}, '%')
		</if>
			AND A.REG_USER_SEQ = #{login_user_seq}
		ORDER BY NOTICE_FLAG DESC, BOARD_SEQ DESC
		/*||ORDER BY NOTICE_FLAG DESC, BOARD_SEQ DESC||*/
	</select>

	<select id="getLikeEducationList" parameterType="map" resultType="com.stoneitgt.common.LowerKeyMap">
		/* file : UserMapper.xml, id : getLikeEducationList */
		select E.*, EB.EDU_MARK_SEQ, (select EW.EDU_WATCHING_SEQ from ST_EDUCATION_WATCHING as EW where EW.EDU_SEQ = E.EDU_SEQ and USER_SEQ = #{loginUserSeq}) as EDU_WATCHING_SEQ
		     	  , SUPPORT.SUPPORT_NAME AS SUPPORT_ORG_NAME
				  , F.FILE_SEQ
				  , F.FILE_PATH
				  , F.THUMBNAIL_PATH
				  , F.CRAWL_URL
		from ST_EDUCATION as E
		left join ST_SUPPORT as SUPPORT ON SUPPORT.SUPPORT_SEQ = E.SUPPORT_ORG
		LEFT JOIN ST_FILES F ON F.REF_TYPE = 'EDUCATION_IMAGE' AND F.REF_SEQ  = E.EDU_SEQ AND F.DEL_FLAG = 0
		left join ST_EDUCATION_BOOKMARK as EB ON EB.EDU_SEQ = E.EDU_SEQ
		where E.DEL_FLAG = 0 AND E.EDU_URL != '' and EB.USER_SEQ = #{loginUserSeq}
	</select>

	<select id="getRecommendEducationList" parameterType="map" resultType="com.stoneitgt.common.LowerKeyMap">
		/* file : UserMapper.xml, id : getRecommendEducationList */
		SELECT E.*
			 , CATE1.NAME                     AS CATEGORY_1_NAME
			 , CATE2.NAME                     AS CATEGORY_2_NAME
			 , CATE3.NAME                     AS CATEGORY_3_NAME
			 , SUPPORT.SUPPORT_NAME               AS SUPPORT_ORG_NAME
			 , DATE_FORMAT(E.REG_DATE, '%Y-%m-%d') AS REG_DT
			 , U.USERNAME                          AS REG_USERNAME
			 , F.FILE_SEQ
			 , F.FILE_PATH
			 , F.THUMBNAIL_PATH
			 , F.CRAWL_URL
			 , EB.EDU_MARK_SEQ
			 , EW.EDU_WATCHING_SEQ
		FROM ST_EDUCATION E
				 INNER JOIN ST_USER U ON E.REG_USER_SEQ = U.USER_SEQ
				 inner join ST_CATEGORY1 as CATE1 ON CATE1.CATEGORY1_SEQ = E.CATEGORY_1
				 inner join ST_CATEGORY2 as CATE2 ON CATE2.CATEGORY2_SEQ = E.CATEGORY_2
				 inner join ST_CATEGORY3 as CATE3 ON CATE3.CATEGORY3_SEQ = E.CATEGORY_3
				 left join ST_SUPPORT as SUPPORT ON SUPPORT.SUPPORT_SEQ = E.SUPPORT_ORG
				 LEFT JOIN ST_FILES F ON F.REF_TYPE = 'EDUCATION_IMAGE' AND F.REF_SEQ  = E.EDU_SEQ AND F.DEL_FLAG = 0
				 left join ST_EDUCATION_BOOKMARK as EB ON EB.EDU_SEQ = E.EDU_SEQ and EB.USER_SEQ = #{loginUserSeq}
				 left join ST_EDUCATION_WATCHING as EW ON EW.EDU_SEQ = E.EDU_SEQ and EW.USER_SEQ = #{loginUserSeq}
		WHERE E.DEL_FLAG        = 0
		  AND E.EDU_URL        != ''

		<if test="category2Group != null and category2Group != ''">
			AND (E.CATEGORY_2 IN
			<foreach collection="category2Group" item="item" index='i' open="(" close=")" separator=",">
				#{item}
			</foreach>
			<if test="category3Group == null or category3Group == ''">
				)
			</if>
		</if>
		<if test="(category2Group != null and category2Group != '') and (category3Group != null and category3Group != '')">
			OR
		</if>
		<if test="category3Group != null and category3Group != ''">
			<if test="category2Group == null or category2Group == ''">
				(
			</if>
			E.CATEGORY_3 IN
			<foreach collection="category3Group" item="item" index='i' open="(" close=")" separator=",">
				#{item}
			</foreach>
			)
		</if>

	</select>

	<select id="getLikeConsultingList" parameterType="map" resultType="com.stoneitgt.common.LowerKeyMap">
		/* file : UserMapper.xml, id : getLikeConsultingList */
		select C.*, CB.CON_MARK_SEQ, (select CW.CON_WATCHING_SEQ from ST_CONSULTING_WATCHING as CW where CW.CON_SEQ = C.CON_SEQ and USER_SEQ = #{loginUserSeq}) as CON_WATCHING_SEQ
			 , SUPPORT.SUPPORT_NAME AS SUPPORT_ORG_NAME
			 , F.FILE_SEQ
			 , F.FILE_PATH
			 , F.THUMBNAIL_PATH
		from ST_CONSULTING as C
				 left join ST_SUPPORT as SUPPORT ON SUPPORT.SUPPORT_SEQ = C.SUPPORT_ORG
				 LEFT JOIN ST_FILES F ON F.REF_TYPE = 'CONSULTING_IMAGE' AND F.REF_SEQ  = C.CON_SEQ AND F.DEL_FLAG = 0
				 left join ST_CONSULTING_BOOKMARK as CB ON CB.CON_SEQ = C.CON_SEQ
		where C.DEL_FLAG = 0 AND C.CON_URL != '' and CB.USER_SEQ = #{loginUserSeq}
	</select>

	<select id="getRecommendConsultingList" parameterType="map" resultType="com.stoneitgt.common.LowerKeyMap">
		/* file : UserMapper.xml, id : getRecommendConsultingList */
		SELECT C.*
		, CATE1.NAME                     AS CATEGORY_1_NAME
		, CATE2.NAME                     AS CATEGORY_2_NAME
		, CATE3.NAME                     AS CATEGORY_3_NAME
		, SUPPORT.SUPPORT_NAME               AS SUPPORT_ORG_NAME
		, DATE_FORMAT(C.REG_DATE, '%Y-%m-%d') AS REG_DT
		, U.USERNAME                          AS REG_USERNAME
		, CB.CON_MARK_SEQ
		, CW.CON_WATCHING_SEQ
		FROM ST_CONSULTING C
		INNER JOIN ST_USER U ON C.REG_USER_SEQ = U.USER_SEQ
		inner join ST_CATEGORY1 as CATE1 ON CATE1.CATEGORY1_SEQ = C.CATEGORY_1
		inner join ST_CATEGORY2 as CATE2 ON CATE2.CATEGORY2_SEQ = C.CATEGORY_2
		inner join ST_CATEGORY3 as CATE3 ON CATE3.CATEGORY3_SEQ = C.CATEGORY_3
		left join ST_SUPPORT as SUPPORT ON SUPPORT.SUPPORT_SEQ = C.SUPPORT_ORG
		left join ST_CONSULTING_BOOKMARK as CB ON CB.CON_SEQ = C.CON_SEQ and CB.USER_SEQ = #{loginUserSeq}
		left join ST_CONSULTING_WATCHING as CW ON CW.CON_SEQ = C.CON_SEQ and CW.USER_SEQ = #{loginUserSeq}
		WHERE C.DEL_FLAG                    = 0

		<if test="category2Group != null and category2Group != ''">
			AND (C.CATEGORY_2 IN
			<foreach collection="category2Group" item="item" index='i' open="(" close=")" separator=",">
				#{item}
			</foreach>
			<if test="category3Group == null or category3Group == ''">
				)
			</if>
		</if>
		<if test="(category2Group != null and category2Group != '') and (category3Group != null and category3Group != '')">
			OR
		</if>
		<if test="category3Group != null and category3Group != ''">
			<if test="category2Group == null or category2Group == ''">
				(
			</if>
			C.CATEGORY_3 IN
			<foreach collection="category3Group" item="item" index='i' open="(" close=")" separator=",">
				#{item}
			</foreach>
			)
		</if>

	</select>

	<delete id="deleteAllEducationBookmark" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllEducationBookmark */
		DELETE FROM ST_EDUCATION_BOOKMARK where DEL_FLAG = 0 and USER_SEQ = #{userSeq}
	</delete>

	<update id="deleteAllEducationWatching" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllEducationWatching */
		DELETE FROM ST_EDUCATION_WATCHING where  USER_SEQ = #{userSeq}
	</update>

	<update id="deleteAllConsultingBookmark" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllConsultingBookmark */
		DELETE FROM ST_CONSULTING_BOOKMARK where DEL_FLAG = 0 and USER_SEQ = #{userSeq}
	</update>

	<update id="deleteAllConsultingWatching" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllConsultingWatching */
		DELETE FROM ST_CONSULTING_WATCHING where  USER_SEQ = #{userSeq}
	</update>

	<update id="deleteAllQna" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllQna */
		UPDATE ST_BOARD
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq} and BOARD_SETTING_SEQ = #{boardSettingSeq}
	</update>

	<update id="deleteAllCommunity" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllCommunity */
		UPDATE ST_COMMUNITY
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq}
	</update>

	<update id="deleteAllReply" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllReply */
		UPDATE ST_REPLY
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq}
	</update>

	<update id="deleteAllUserSurvey" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllUserSurvey */
		UPDATE ST_USER_SURVEY
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq}
	</update>

	<update id="deleteAllUserQuestion" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllUserQuestion */
		UPDATE ST_USER_QUESTION
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq}
	</update>

	<update id="deleteAllUserAnswer1" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllUserAnswer1 */
		UPDATE ST_USER_ANSWER1
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq}
	</update>

	<update id="deleteAllUserAnswer2" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllUserAnswer2 */
		UPDATE ST_USER_ANSWER2
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq}
	</update>

	<update id="deleteAllUserKeyword" parameterType="int" >
		/* file : UserMapper.xml, id : deleteAllUserKeyword */
		UPDATE ST_USER_KEYWORD
		SET DEL_FLAG         = 1
		  , DEL_USER_SEQ     = #{userSeq}
		  , DEL_DATE         = CURRENT_TIMESTAMP()
		WHERE DEL_FLAG = 0 AND REG_USER_SEQ         = #{userSeq}
	</update>

	<select id="selectTotalRecords" resultType="int">
		SELECT FOUND_ROWS();
	</select>

</mapper>